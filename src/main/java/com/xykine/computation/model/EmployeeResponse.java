package com.xykine.computation.model;

import org.springframework.data.annotation.*;

import java.math.BigDecimal;
import java.time.Instant;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.stream.StreamSupport;

public record EmployeeResponse(
        Long employeeID,
        String firstName,
        String lastName,
        String middleName,
        String fullName,
        String employeeCode,
        String employeeExternalCode,
        String title,
        String maritalStatus,
        String addressLine1,
        String addressLine2,
        String city,
        String state,
        String lga,
        String postalCode,
        String dob,
        String phone1,
        String phone2,
        String email,
        String officialEmail,
        String gender,
        String idType,
        String managerID,
        String isManager,
        String employeeGroupID,
        String employeeSubGroupID,
        String grade,
        String level,
        String contractType,
        String startDate,
        String endDate,
        String position,
        String departmentID,
        String unitID,
        String dimensionID,
        String costCenterID,
        String currencyID,
        String pfaID,
        String bankID,
        String salaryFrequency,
        String accountType,
        String bankAccountNo,
        String wageEmployee,
        String isTaxable,
        String isActive,
        String isDirty,
        String encodedImage,
        String isDisable,
        String disableDate,
        String isMedical,
        String medicalDate,
        String locationID,
        String taxStateID,
        String taxStateName,
        String isPensionable,
        String changeStateID,
        String businessUnitID,
        String bvn,
        String taxIDNo,
        String taxClass,
        String bankPaymentName,
        String sfRecord,
        int nombreDePart,
        BigDecimal basicSalary,
        BigDecimal hourlyRate,
        String band,
        Long paymentInfoId,
        Long employeeLockID,
        boolean isEmployeeLocked,

        @CreatedDate
        Instant createdDate,

        @LastModifiedDate
        Instant lastModifiedDate,

        @CreatedBy
        String createdBy,

        @LastModifiedBy
        String lastModifiedBy,

        @Version
        int version
) {
    public static EmployeeResponse from(Employee employee) {
        if (employee == null) return null;
        return new EmployeeResponse(
                employee.employeeID(), // employeeID to be generated by the database
                employee.firstName(),
                employee.lastName(),
                employee.middleName(), // middleName not provided
                employee.fullName(),
                employee.employeeCode(),
                employee.employeeExternalCode(), // employeeExternalCode not provided
                employee.title(), // titleID not provided
                employee.maritalStatus(), // maritalStatus not provided
                employee.addressLine1(),// addressLine1,
                employee.addressLine2(),// addressLine2,
                employee.city(),// city,
                employee.state(),// state,
                employee.lga(),// lga,
                employee.postalCode(),// postalCode,,
                // addressID not provided
                formatDate(employee.dob()),
                employee.phone1(), // phone1 not provided
                employee.phone2(), // phone2 not provided
                employee.email(),
                employee.officialEmail(), // officialEmail not provided
                employee.gender(),
                employee.idType(), // idTypeID not provided
                employee.managerID(), // managerID not provided
                employee.isManager(), // isManager not provided
                employee.employeeGroupID(), // employeeGroupID not provided
                employee.employeeSubGroupID(), // employeeSubGroupID not provided
                employee.grade(), // gradeID not provided
                employee.level(), // levelID not provided
                employee.contractType(), // contractTypeID not provided
                formatDate(employee.startDate()), // startDate not provided
                formatDate(employee.endDate()), // endDate not provided
                employee.position(), // positionID not provided
                employee.departmentID(), // departmentID not provided
                employee.unitID(), // unitID not provided
                employee.dimensionID(), // dimensionID not provided
                employee.costCenterID(), // costCenterID not provided
                employee.currencyID(), // currencyID not provided
                employee.pfaID(), // pfaID not provided
                employee.bankID(), // bankID not provided
                employee.salaryFrequency(), // salaryFrequency not provided
                employee.accountType(), // accountType not provided
                employee.bankAccountNo(), // bankAccountNo not provided
                employee.wageEmployee(), // wageEmployee not provided
                employee.isTaxable(), // isTaxable not provided
                employee.isActive(), // isActive not provided
                employee.isDirty(), // isDirty not provided
                employee.encodedImage(), // encodedImage not provided
                employee.isDisable(), // isDisable not provided
                formatDate(employee.disableDate()), // disableD not provided
                employee.isMedical(), // isMedical not provided
                formatDate(employee.medicalDate()), // medicalD not provided
                employee.locationID(), // locationID not provided
                employee.taxStateID(), // taxStateID not provided
                employee.taxStateName(), // taxStateName not provided
                employee.isPensionable(), // isPensionable not provided
                employee.changeStateID(), // updated not provided
                employee.businessUnitID(), // changeStateID not provided
                employee.bvn(), // businessUnitID not provided
                employee.taxIDNo(), // bvn not provided
                employee.taxClass(), // taxIDNo not provided
                employee.bankPaymentName(), // taxClass not provided
                employee.sfRecord(), // bankPaymentName not provided
                employee.nombreDePart(), // sfRecord not provided
                employee.basicSalary(), // nombreDePart not provided
                employee.hourlyRate(), // basicSalary not provided
                employee.band(), // hourlyRate not provided
                employee.paymentInfoId(),
                employee.employeeLockID(),
                employee.isEmployeeLocked(),
                employee.createdDate(), // createdDate set to current time
                employee.lastModifiedDate(), // lastModifiedDate not provided
                employee.createdBy(), // createdBy set to a default value or determined by context
                employee.lastModifiedBy(), // lastModifiedBy not provided
                employee.version()// version set to default value
        );
    }

    public static String formatDate(LocalDate date) {
        // Define a DateTimeFormatter with the desired format
        if(date == null){
            return null;
        }
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        return date.format(formatter);
    }
}
